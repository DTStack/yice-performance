ARG BASE_IMAGE=arm64v8/ubuntu:22.04
FROM ${BASE_IMAGE}

# RUN echo 'deb http://mirrors.aliyun.com/ubuntu/ jammy main restricted universe multiverse \n\
#      deb http://mirrors.aliyun.com/ubuntu/ jammy-security main restricted universe multiverse \n\
#      deb-src http://mirrors.aliyun.com/ubuntu/ jammy-security main restricted universe multiverse \n\
#      deb http://mirrors.aliyun.com/ubuntu/ jammy-updates main restricted universe multiverse \n\
#      deb-src http://mirrors.aliyun.com/ubuntu/ jammy-updates main restricted universe multiverse \n\
#      deb http://mirrors.aliyun.com/ubuntu/ jammy-proposed main restricted universe multiverse \n\
#      deb-src http://mirrors.aliyun.com/ubuntu/ jammy-proposed main restricted universe multiverse \n\
#      deb http://mirrors.aliyun.com/ubuntu/ jammy-backports main restricted universe multiverse \n\
#      deb-src http://mirrors.aliyun.com/ubuntu/ jammy-backports main restricted universe multiverse \n'\
#      > /etc/apt/sources.list

# 安装 node
RUN apt-get update -y && apt-get install -y curl \
     && curl -fsSL https://deb.nodesource.com/setup_18.x | bash -
RUN apt-get remove -y curl \
     && apt-get install -y nodejs

# puppeteer 和 node-canvas 对系统依赖的要求
# https://github.com/Automattic/node-canvas?tab=readme-ov-file#compiling
# https://github.com/puppeteer/puppeteer/blob/puppeteer-v19.6.3/docs/troubleshooting.md#chrome-headless-doesnt-launch-on-unix
# RUN apt-get install -y build-essential libcairo2-dev libpango1.0-dev libnss3 libatk1.0-0 ca-certificates fonts-liberation libasound2 libatk-bridge2.0-0 libc6 libcairo2 libcups2 libdbus-1-3 libexpat1 libfontconfig1 libgbm1 libgcc1 libglib2.0-0 libgtk-3-0 libnspr4 libpangocairo-1.0-0 libstdc++6 libx11-6 libx11-xcb1 libxcb1 libxcomposite1 libxcursor1 libxext6 libxfixes3 libxi6 libxrandr2 libxrender1 libxss1 libxtst6

# RUN apt-get install -y build-essential libcairo2-dev libpango1.0-dev libnss3 libatk1.0-0
# RUN apt-get install -y ca-certificates fonts-liberation libasound2 libatk-bridge2.0-0
# RUN apt-get install -y libc6 libcairo2 libcups2 libdbus-1-3 libexpat1 libfontconfig1
# RUN apt-get install -y libgbm1 libgcc1 libglib2.0-0 libgtk-3-0 libnspr4 libpangocairo-1.0-0
# RUN apt-get install -y libstdc++6 libx11-6 libx11-xcb1 libxcb1 libxcomposite1 libxcursor1
# RUN apt-get install -y libxext6 libxfixes3 libxi6 libxrandr2 libxrender1
# RUN apt-get install -y libxss1 libxtst6

RUN apt-get install -y build-essential libcairo2-dev libpango1.0-dev libnss3 libatk1.0-0 \
     && apt-get install -y ca-certificates fonts-liberation libasound2 libatk-bridge2.0-0 \
     && apt-get install -y libc6 libcairo2 libcups2 libdbus-1-3 libexpat1 libfontconfig1 \
     && apt-get install -y libgbm1 libgcc1 libglib2.0-0 libgtk-3-0 libnspr4 libpangocairo-1.0-0 \
     && apt-get install -y libstdc++6 libx11-6 libx11-xcb1 libxcb1 libxcomposite1 libxcursor1 \
     && apt-get install -y libxext6 libxfixes3 libxi6 libxrandr2 libxrender1 \
     && apt-get install -y libxss1 libxtst6


# 设置工作目录
WORKDIR /yice-performance

RUN npm config set registry https://registry.npmmirror.com/ \
     && npm install pnpm@6.35.1 pm2 -g

RUN apt-get install chromium-browser -y

# skips puppeteer installing chrome and points to correct binary
ENV PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true \
     PUPPETEER_EXECUTABLE_PATH=/usr/bin/chromium-browser

COPY package.json pnpm-lock.yaml pnpm-workspace.yaml turbo.json ./
COPY apps/server/package.json ./apps/server/
COPY apps/web/package.json ./apps/web/
RUN pnpm install

# 复制项目文件
COPY . .

# 构建
RUN pnpm build

# 减少 node_modules 的磁盘占用
RUN find . -name "node_modules" -type d -prune -exec rm -rf '{}' + \
     && pnpm install --production

VOLUME /Users/liuyi/Desktop/Projects/dtstack/yice-performance/docker/yice-data

# 暴露端口
EXPOSE 4000

# 定义环境变量
ENV NODE_ENV=production


# 启动应用程序
# CMD pm2 start apps/server/pm2/config.json --env production
CMD node apps/server/dist/main.js
